package priorityQueue;

import java.util.ArrayList;
import java.util.Collections;

/**
 * An implementation of the Priority Queue interface using an array list.
 * 
 * @author Matt Boutell and <<TODO: Your name here>>>. Created Mar 29, 2014.
 * 
 * @param <T>
 *            Generic type of PQ elements
 */
public class ArrayListMinPQ<T extends Comparable<T>> {
	// Requirement: You must use this instance variable without changes.
	private ArrayList<T> items;

	public ArrayListMinPQ() {
		this.items = new ArrayList<T>();
	}

	public T findMin() {
		// This is also known as peekMin
		// TODO: implement
		if (this.items.size() == 0) {
			return null;
		}
		T min = this.items.get(0);
		for (T t:items) {
			if (t.compareTo(min) == -1)
				min = t;

		}
		return min;
	}

	public T deleteMin() {
		// TODO: implement
		if (this.items.size() == 0) {
			return null;
		}
		return this.items.remove(0);
	}

	public void insert(T item) {
		// TODO: implement
		this.items.add(item);
		Collections.sort(items);
	}

	public int size() {
		// TODO: implement
		return this.items.size();
	}

	public boolean isEmpty() {
		// TODO: implement
		if(this.size()==0){
			return true;
		}
		return false;
	}

	public void clear() {
		// TODO: implement
		this.items.clear();
	}
}
